using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

namespace _01._Basic_Stack_Operations
{

    internal class Program

    {
        static void Main(string[] args)
        {


            var guests = Console.ReadLine()
                .Split(' ', StringSplitOptions.RemoveEmptyEntries)
                .ToList();
            string command;
            while ((command = Console.ReadLine()) != "Party!")
            {
                string[] cmdArgs = command.Split();
                string action = cmdArgs[0];
                string criteria = cmdArgs[1];
                var newList = new List<string>();

                foreach (var guest in guests)
                {
                    newList.Add(guest);
                }
                if (action == "Remove")
                {
                    if (criteria == "Length")
                    {
                        int num = int.Parse(cmdArgs[2]);
                        guests = guests.Where(g => g.Length != num).ToList();

                    }
                    else
                    {
                        string parth = cmdArgs[2];
                        if (criteria == "StartsWith")
                        {
                            string pattern = $@"{parth}[A-Z,a-z]*";
                            Regex regex = new Regex(pattern);
                            foreach (string guest in guests)
                            {
                                Match match = regex.Match(guest);
                                if (match.Success)
                                {
                                    newList = newList.Where(n => n != guest).ToList();
                                }
                            }

                        }
                        else if (criteria == "EndsWith")
                        {
                            string pattern = $@"[A-Z,a-z]*{parth}";
                            Regex regex = new Regex(pattern);
                            foreach (string guest in guests)
                            {
                                Match match = regex.Match(guest);
                                if (match.Success)
                                {
                                    newList = newList.Where(n => n != guest).ToList();
                                }
                            }

                        }
                    }
                }
                else if (action == "Double")
                {
                    int index = 0;
                    if (criteria == "Length")
                    {
                        int num = int.Parse(cmdArgs[2]);

                        foreach (string guest in guests)
                        {
                            index++;
                            if (guest.Length == num)
                            {
                                newList.Insert(index, guest);
                                index++;
                            }
                        }

                    }
                    else
                    {
                        string parth = cmdArgs[2];
                        if (criteria == "StartsWith")
                        {
                            string pattern = $@"{parth}[A-Z,a-z]*";
                            Regex regex = new Regex(pattern);

                            foreach (string guest in guests)
                            {
                                index++;
                                Match match = regex.Match(guest);
                                if (match.Success)
                                {
                                    newList.Insert(index, guest);
                                    index++;
                                }
                            }

                        }
                        else if (criteria == "EndsWith")
                        {
                            string pattern = $@"[A-Z,a-z]*{parth}";
                            Regex regex = new Regex(pattern);
                            foreach (string guest in guests)
                            {
                                index++;
                                Match match = regex.Match(guest);
                                if (match.Success)
                                {
                                    newList.Insert(index, guest);
                                    index++;
                                }
                            }

                        }
                    }
                }
                guests = newList;

            }
            if (guests.Count != 0)
            {
                Console.WriteLine($"{String.Join(", ", guests)} are going to the party!");
            }
            else
            {
                Console.WriteLine($"Nobody is going to the party!");
            }
        }
    }
}
