using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace _01._Basic_Stack_Operations
{

    internal class Program

    {
        static void Main(string[] args)
        {

            using StreamReader sr = new StreamReader(@"C:\Users\nasko\Desktop\FilesAndStreams\input.txt");
            using StreamReader wordsReader = new StreamReader(@"C:\Users\nasko\Desktop\FilesAndStreams\words.txt");
            Regex regex = new Regex(@"[A-z]+");
            string input = wordsReader.ReadToEnd();
            MatchCollection matches = regex.Matches(input);
            string[] words = new string[matches.Count];
            for (int i = 0; i < words.Length; i++)
            {
                words[i] = matches[i].ToString().ToLower();
            }
            matches = Regex.Matches(sr.ReadToEnd(), @"\b\w+\b");
            string[] texts = new string[matches.Count];
            for (int i = 0; i < texts.Length; i++)
            {
                texts[i] = matches[i].ToString().ToLower();
            }

            using StreamWriter sw = new StreamWriter(@"C:\Users\nasko\Desktop\FilesAndStreams\output.txt");
            Dictionary<string,int> counts = new Dictionary<string,int>();

            foreach(string text in texts)
            {
                foreach (var word in words)
                {
                    if (text==word)
                    {
                        if (counts.ContainsKey(text))
                        {
                            counts[text]++;
                        }
                        else
                        {
                            counts.Add(text, 1);
                        }
                    }
                }
            }

            foreach (var count in counts.OrderByDescending(v=>v.Value))
            {
                sw.WriteLine($"{count.Key} - {count.Value}");
            }
            

        }
    }
}
